/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "AppTrackeriOS.h"


// Define S3E_EXT_SKIP_LOADER_CALL_LOCK on the user-side to skip LoaderCallStart/LoaderCallDone()-entry.
// e.g. in s3eNUI this is used for generic user-side IwUI-based implementation.
#ifndef S3E_EXT_SKIP_LOADER_CALL_LOCK
#if defined I3D_ARCH_MIPS || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP)) || defined I3D_ARCH_NACLX86_64
// For platforms missing stack-switching (MIPS, WP8, NaCl, etc.) make loader-entry via LoaderCallStart/LoaderCallDone() on the user-side.
#define LOADER_CALL_LOCK
#endif
#endif


#include "AppTrackeriOS_interface.h"

static AppTrackeriOSFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0x41ed49fd, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: AppTrackeriOS");

        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0x41ed49fd, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool AppTrackeriOSAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eResult AppTrackeriOSRegister(AppTrackeriOSCallback cbid, s3eCallback fn, void* userData)
{
    IwTrace(APPTRACKERIOS_VERBOSE, ("calling AppTrackeriOS[0] func: AppTrackeriOSRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOSRegister);
#endif

    s3eResult ret = g_Ext.m_AppTrackeriOSRegister(cbid, fn, userData);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOSRegister);
#endif

    return ret;
}

s3eResult AppTrackeriOSUnRegister(AppTrackeriOSCallback cbid, s3eCallback fn)
{
    IwTrace(APPTRACKERIOS_VERBOSE, ("calling AppTrackeriOS[1] func: AppTrackeriOSUnRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOSUnRegister);
#endif

    s3eResult ret = g_Ext.m_AppTrackeriOSUnRegister(cbid, fn);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOSUnRegister);
#endif

    return ret;
}

s3eResult AppTrackeriOS_startSession(const char* apiKey)
{
    IwTrace(APPTRACKERIOS_VERBOSE, ("calling AppTrackeriOS[2] func: AppTrackeriOS_startSession"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_startSession);
#endif

    s3eResult ret = g_Ext.m_AppTrackeriOS_startSession(apiKey);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_startSession);
#endif

    return ret;
}

s3eResult AppTrackeriOS_closeSession()
{
    IwTrace(APPTRACKERIOS_VERBOSE, ("calling AppTrackeriOS[3] func: AppTrackeriOS_closeSession"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_closeSession);
#endif

    s3eResult ret = g_Ext.m_AppTrackeriOS_closeSession();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_closeSession);
#endif

    return ret;
}

s3eResult AppTrackeriOS_event(const char* eventName)
{
    IwTrace(APPTRACKERIOS_VERBOSE, ("calling AppTrackeriOS[4] func: AppTrackeriOS_event"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_event);
#endif

    s3eResult ret = g_Ext.m_AppTrackeriOS_event(eventName);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_event);
#endif

    return ret;
}

s3eResult AppTrackeriOS_eventWithValue(const char* eventName, const char* valueString)
{
    IwTrace(APPTRACKERIOS_VERBOSE, ("calling AppTrackeriOS[5] func: AppTrackeriOS_eventWithValue"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_eventWithValue);
#endif

    s3eResult ret = g_Ext.m_AppTrackeriOS_eventWithValue(eventName, valueString);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_eventWithValue);
#endif

    return ret;
}

s3eResult AppTrackeriOS_loadModule(const char* location)
{
    IwTrace(APPTRACKERIOS_VERBOSE, ("calling AppTrackeriOS[6] func: AppTrackeriOS_loadModule"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_loadModule);
#endif

    s3eResult ret = g_Ext.m_AppTrackeriOS_loadModule(location);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_loadModule);
#endif

    return ret;
}

s3eResult AppTrackeriOS_loadModuleToCache(const char* location_code)
{
    IwTrace(APPTRACKERIOS_VERBOSE, ("calling AppTrackeriOS[7] func: AppTrackeriOS_loadModuleToCache"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_loadModuleToCache);
#endif

    s3eResult ret = g_Ext.m_AppTrackeriOS_loadModuleToCache(location_code);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_loadModuleToCache);
#endif

    return ret;
}

s3eResult AppTrackeriOS_destroyModule()
{
    IwTrace(APPTRACKERIOS_VERBOSE, ("calling AppTrackeriOS[8] func: AppTrackeriOS_destroyModule"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_destroyModule);
#endif

    s3eResult ret = g_Ext.m_AppTrackeriOS_destroyModule();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_destroyModule);
#endif

    return ret;
}

s3eResult AppTrackeriOS_fixAdOrientation(int landscape_portrait_or_auto)
{
    IwTrace(APPTRACKERIOS_VERBOSE, ("calling AppTrackeriOS[9] func: AppTrackeriOS_fixAdOrientation"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_fixAdOrientation);
#endif

    s3eResult ret = g_Ext.m_AppTrackeriOS_fixAdOrientation(landscape_portrait_or_auto);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_fixAdOrientation);
#endif

    return ret;
}

s3eResult AppTrackeriOS_setAgeRange(const char* ageRange)
{
    IwTrace(APPTRACKERIOS_VERBOSE, ("calling AppTrackeriOS[10] func: AppTrackeriOS_setAgeRange"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_setAgeRange);
#endif

    s3eResult ret = g_Ext.m_AppTrackeriOS_setAgeRange(ageRange);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_setAgeRange);
#endif

    return ret;
}

s3eResult AppTrackeriOS_setGender(const char* gender)
{
    IwTrace(APPTRACKERIOS_VERBOSE, ("calling AppTrackeriOS[11] func: AppTrackeriOS_setGender"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_setGender);
#endif

    s3eResult ret = g_Ext.m_AppTrackeriOS_setGender(gender);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_setGender);
#endif

    return ret;
}

bool AppTrackeriOS_isAdReady(const char* placement)
{
    IwTrace(APPTRACKERIOS_VERBOSE, ("calling AppTrackeriOS[12] func: AppTrackeriOS_isAdReady"));

    if (!_extLoad())
        return S3E_FALSE;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_isAdReady);
#endif

    bool ret = g_Ext.m_AppTrackeriOS_isAdReady(placement);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_AppTrackeriOS_isAdReady);
#endif

    return ret;
}
